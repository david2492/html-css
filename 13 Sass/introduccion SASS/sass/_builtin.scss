@use "sass:string";
@use "sass:math";
@use "sass:list";
@use "sass:selector";
@use "sass:color";

/*sass --watch styles.scss styles.css  */ /*esto es para siempre abrir para ver los datos*/
//funciones con cadenas de texto


@debug "hola";
@debug string.index("helvetica Neue", "Neue");

$string:"Helvetica";
$newString: string.insert($string, "Bold", 9);

@debug $newString;
@debug string.length($newString);

@debug string.slice($newString, 5,9);

@debug string.to-upper-case("Roboto Mono");
@debug string.to-lower-case("Roboto Mono");

@debug string.unique-id();


///funciones con numeros 



@debug math.$e; /*acceder a la constante e*/
@debug math.$pi; /*acceder a la constante Pi*/

@debug math.ceil(4.1); /*sirve para redondear +*/
@debug math.floor(4.6) ; /*sirve para redondear -*/
@debug math.round(4.6) ; /*sirve para redondear dependiendo el 5 4.4 rendodea al 4, 4.6 redondea al 5*/

@debug math.clamp(0,256.36,10); /*sirve para devolver un minimo o 
un maximo en un rango en ejemplo con 256.36 que no esta en el rango de 0 a  10 me devuelve el 10 pero si 
colocamos -6.36 va a devolver 0 pero si le colocamos 6 el resultado va hacer 6*/

@debug math.max(3, 4, 6, 10,399, 10, 2); /*Sirve para devolver el numero mayor en una lista*/
@debug math.min(3, 4, 6, 10,399, 10, 2); /*Sirve para devolver el numero menor en una lista*/


@debug math.abs(8); /*devuelve el mismo numero pero en positivo*/
@debug math.abs(-8); /*devuelve el mismo numero pero en positivo*/

@debug math.pow(2, 4); /*sirve para elevar el 2 el numero que queremos elevar y 4 la elevacion*/
@debug math.pow(2, math.abs(-23));/*el numero a elevar y la elevacion que lo pone en positivo con la anterior operacion*/

@debug math.cos(math.$pi);
@debug math.sin(math.$pi);
@debug math.tan(math.$pi);


////funciones con listas 
/*ultilizar funcon de listas @use "sass:list"*/

$lista1: 10px, 10px, 0px, 15px;

@debug $lista1;
@debug list.append($lista1, 25px); /*sirve para agregar un nuevo dato en la lista*/
@debug list.append($lista1, 25px, space);/*sirve para agregar un nuevo dato en la lista con separador de espacio*/

$border-custom: solid 1px #ccc;

@debug list.index($border-custom, solid); /*sirve para encontrar en que posicion esta un dato en una lista*/


@debug list.join($lista1, $border-custom, auto); /*sirve para unir dos listas*/
@debug list.length(list.join($lista1, $border-custom, auto)); /*sirve mirar cuantos datos hay en la lista*/

@debug list.separator($border-custom); /*sirve para mirar con que separador esta*/
@debug list.separator(list.join($lista1, $border-custom, auto));


@debug list.set-nth($border-custom, 2, 2px);/*sirve para enviar nuevo sparametros listo: $border-custom posicion: 2 poner dos 2px*/

////funciones con selector 
/*ultilizar funcon de listas @use "sass:selector"*/
$selector-1: "a";
$selector-2: ".disbled";

@debug selector.append($selector-1, $selector-2); /*sirve para unir dos selectores*/


////funciones de color 
/*ultilizar funcon de listas @use "sass:color"*/

$color:rgb(253, 170, 45);

@debug color.adjust($color, $red:-50, $alpha:-0.5);

$color-2:rgb(253, 170, 45, 0.5);


@debug color.complement($color);
$color-comp:#6eff51;

@debug darken($color, 10%);
$color-dark:#c300ea;

@debug lighten($color, 20%);
$color-light:#f9e8ff;

@debug color.red($color);
@debug color.green($color);
@debug color.blue($color);

@debug color.hue($color);